[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo = 'neomake/neomake'
hook_add = ''' autocmd! BufWritePost * Neomake
'''

[[plugins]]
repo = 't9md/vim-quickhl'
hook_add = '''
"let g:quickhl_cword_enable_at_startup = 1		" カーソル位置ハイライトを最初から有効
" キーバインド
nmap <Leader>* <Plug>(quickhl-manual-toggle)
vmap <Leader>; <Plug>(quickhl-manual-this)
nmap <Leader>; <Plug>(quickhl-manual-this)
nmap <Leader>+ <Plug>(quickhl-cword-toggle)
nmap <Leader>] <Plug>(quickhl-tag-toggle)
vmap <Leader><Esc> <Plug>(quickhl-manual-reset)
nmap <Leader><Esc> <Plug>(quickhl-manual-reset)
" 検索時のハイライト色
"highlight Search gui=underline guibg=None guifg=None
" 指定単語ハイライト色
let g:quickhl_manual_colors = [
	\ "gui=none ctermfg=7   ctermbg=153 guibg=#4169e1 guifg=#ffffff",
	\ "gui=none ctermfg=7   ctermbg=1   guibg=#70a040 guifg=#ffffff",
	\ "gui=none ctermfg=7   ctermbg=2   guibg=#ffa500 guifg=#ffffff",
	\ "gui=none ctermfg=7   ctermbg=3   guibg=#cd4040 guifg=#ffffff",
	\ "gui=none ctermfg=7   ctermbg=4   guibg=#20b2aa guifg=#ffffff",
	\ "gui=none ctermfg=7   ctermbg=5   guibg=#6a5acd guifg=#ffffff",
	\ "gui=none ctermfg=7   ctermbg=6   guibg=#f08080 guifg=#ffffff",
	\ "gui=none ctermfg=7   ctermbg=45  guibg=#1060a0 guifg=#ffffff",
	\ "gui=none ctermfg=7   ctermbg=16  guibg=#2e8b57 guifg=#ffffff",
	\ "gui=none ctermfg=7   ctermbg=21  guibg=#a9a9a9 guifg=#ffffff",
	\ "gui=none ctermfg=7   ctermbg=22  guibg=#e0c67c guifg=#ffffff",
	\ "gui=none ctermfg=7   ctermbg=56  guibg=#dd0add guifg=#ffffff",
	\ "gui=none ctermfg=16  ctermbg=50  guibg=#00ffff guifg=#222222",
	\ ]
" カーソル追従ハイライト色
let g:quickhl_cword_hl_command = "QuickhlCword gui=underline cterm=underline term=underline"
" タグファイル単語ハイライト色
let g:quickhl_tag_hl_command = "QuickhlTag gui=underline cterm=underline term=underline"

" 常にハイライトさせる単語
"let g:quickhl_manual_enable_at_startup = 1
"let g:quickhl_manual_keywords = [
"	\ "pachicoma",
"	\ {"pattern": '\s\+$', "regexp": 1 },  
"	\ ]
'''
 
[[plugins]]
repo = 'mbbill/undotree'
hook_add = '''
if has("persistent_undo")
	" ファイルを閉じてもUndo記録を残す
	set undodir=$XDG_CACHE_HOME/undodir/
	set undofile
endif
let g:undotree_WindowLayout = 4			" undotreeは左側/diffは下にウィンドウ幅で表示
let g:undotree_ShortIndicators = 1		" 時間単位は短く表示
let g:undotree_SplitWidth = 30			" undotreeのウィンドウ幅
let g:undotree_SetFocusWhenToggle = 1   " undotreeを開いたらフォーカスする
"let g:undotree_DiffAutoOpen = 0         " diffウィンドウは起動時無効
let g:undotree_DiffpanelHeight = 8		" diffウィンドウの行数
"let g:undotree_HighlightChangedText = 0 " 変更箇所のハイライト無効 " undotreeをトグル表示
noremap <Leader>u :UndotreeToggle<CR>

" undotreeバッファ内でのキーバインド設定
function! g:Undotree_CustomMap()
	map <buffer> K call UndotreeGoNextSaved()
	map <buffer> J call UndotreeGoPreviousSaved()
	map <silent><buffer> <Esc> q
	map <silent><buffer> h ?
endfunction
'''

[[plugins]]
repo = 'kshenoy/vim-signature'
hook_add = '''
" 全marks/markers削除時は消して良いか確認する
let g:SignaturePurgeConfirmation = 1
" キーバインド設定
let g:SignatureMap = {
	\ 'Leader'             :  "m",
	\ 'PlaceNextMark'      :  "m,",
	\ 'ToggleMarkAtLine'   :  "m.",
	\ 'PurgeMarksAtLine'   :  "m-",
	\ 'DeleteMark'         :  "dm",
	\ 'PurgeMarks'         :  "m<Space>",
	\ 'PurgeMarkers'       :  "m<BS>",
	\ 'GotoNextSpotAlpha'  :  "]@",
	\ 'GotoPrevSpotAlpha'  :  "[@",
	\ 'GotoNextMarker'     :  "]-",
	\ 'GotoPrevMarker'     :  "[-",
	\ 'GotoNextMarkerAny'  :  "]^",
	\ 'GotoPrevMarkerAny'  :  "[^",
	\ 'ListBufferMarks'    :  "m/",
	\ 'ListBufferMarkers'  :  "m?"
	\ }
'''

